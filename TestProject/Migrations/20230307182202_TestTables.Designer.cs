// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject.Data;

#nullable disable

namespace TestProject.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230307182202_TestTables")]
    partial class TestTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("CompetenceProject", b =>
                {
                    b.Property<int>("CompetencesCompetenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectsProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompetencesCompetenceId", "ProjectsProjectId");

                    b.HasIndex("ProjectsProjectId");

                    b.ToTable("CompetenceProject");
                });

            modelBuilder.Entity("TestProject.Models.Competence", b =>
                {
                    b.Property<int>("CompetenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CompetenceId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("TestProject.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Published")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CompetenceProject", b =>
                {
                    b.HasOne("TestProject.Models.Competence", null)
                        .WithMany()
                        .HasForeignKey("CompetencesCompetenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestProject.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
